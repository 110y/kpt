/**
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const normalize = require('../')
const t = require('tap')

t.test('benign array', async t => {
  const pkg = { name: 'hello', version: 'world', bin: ['./x/y', 'y/z', './a'] }
  const expect = { name: 'hello', version: 'world', bin: {
    y: 'x/y',
    z: 'y/z',
    a: 'a',
  } }
  t.strictSame(normalize(pkg), expect)
  t.strictSame(normalize(normalize(pkg)), expect, 'double sanitize ok')
})

t.test('conflicting array', async t => {
  const pkg = { name: 'hello', version: 'world', bin: ['./x/y', 'z/y', './a'] }
  const expect = { name: 'hello', version: 'world', bin: {
    y: 'z/y',
    a: 'a',
  } }
  t.strictSame(normalize(pkg), expect)
  t.strictSame(normalize(normalize(pkg)), expect, 'double sanitize ok')
})

t.test('slashy array', async t => {
  const pkg = { name: 'hello', version: 'world', bin: [ '/etc/passwd' ] }
  const expect = { name: 'hello', version: 'world', bin: { passwd: 'etc/passwd' } }
  t.strictSame(normalize(pkg), expect)
  t.strictSame(normalize(normalize(pkg)), expect, 'double sanitize ok')
})

t.test('dotty array', async t => {
  const pkg = { name: 'hello', version: 'world', bin: ['../../../../etc/passwd'] }
  const expect = { name: 'hello', version: 'world', bin: { passwd: 'etc/passwd' } }
  t.strictSame(normalize(pkg), expect)
  t.strictSame(normalize(normalize(pkg)), expect, 'double sanitize ok')
})
