/**
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { TransformFunction as Transform, IPartialOptions } from './out/managers/options';
import { ITask } from './out/managers/tasks';
import { Entry, EntryItem } from './out/types/entries';
import { Pattern } from './out/types/patterns';

declare namespace FastGlob {
	type Options<T = EntryItem> = IPartialOptions<T>;
	type TransformFunction<T> = Transform<T>;
	type Task = ITask;

	interface IApi {
		<T = EntryItem>(patterns: Pattern | Pattern[], options?: IPartialOptions<T>): Promise<T[]>;

		async<T = EntryItem>(patterns: Pattern | Pattern[], options?: IPartialOptions<T>): Promise<T[]>;
		sync<T = EntryItem>(patterns: Pattern | Pattern[], options?: IPartialOptions<T>): T[];
		stream(patterns: Pattern | Pattern[], options?: IPartialOptions): NodeJS.ReadableStream;
		generateTasks(patterns: Pattern | Pattern[], options?: IPartialOptions): Task[];
	}
}

declare const FastGlob: FastGlob.IApi;

export = FastGlob;
export as namespace FastGlob;
