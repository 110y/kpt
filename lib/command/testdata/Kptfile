metadata:
  name: nginx
pipelineCommands:
- command:
    use: "image"
    path: ["set"]
    short: "set the image on an application"
    long: |
      Set the image on an application
    example: |
      # set image --old foo --new bar
    inputs:
    - type: string
      name: new-image
      required: true
      description: "the new image to set"
    - type: string
      name: old-image
      required: true
      description: "the old image to replace"
  pipeline:
    filters:
    - kind: Modifier
      pipeline:
      - kind: FilterMatcher
        pipeline:
        - kind: AnnotationGetter
          key: name
          value: '{{ arg 0 }}'
      - kind: PathGetter
        path: ['spec', 'template', 'spec', 'containers', '[name={{ arg 0 }}]', 'image']
      - kind: ValueReplacer
        stringMatch: '{{ input "old-image" }}'
        replace: '{{ input "new-image" }}'
duckCommands:
- duck:
    resourceName: '{{ arg 0 }}'
    getSetField: ["spec", "serviceName"]
    setValue: '{{ input "value" }}'
  setCommand:
    use: "service-name RESOURCE_NAME"
    exactArgs: 1
    path: ["set"]
    inputs:
    - type: string
      name: value
      required: true
      description: "the serviceName to set"
  getCommand:
    use: "service-name RESOURCE_NAME"
    exactArgs: 1
    path: ["get"]
