// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "mdtogo"; DO NOT EDIT.
package svrdocs

var READMEShort = `Send Resource request to a Kubernetes apiserver`
var READMELong = `
In order to make use of Resource configuration, it must be sent to an apiserver where it
will be actuated by Kubernetes Controllers.
`
var READMEExamples = `
    kpt svr apply -R -f DIR/

    kpt svr diff -R -f DIR/

    kpt svr wait DIR/`

var ApplyShort = `Apply local Resource configuration to a cluster.`
var ApplyLong = `
Set the desired state of a cluster to match the locally defined Resource configuration.
`
var ApplyExamples = `
  # Apply all resources under a directory
  kpt svr apply -R -f DIR/

  # Apply resources from stdin
  cat service.yaml | kpt svr apply -f -`

var DiffShort = `Block until the Resources are current, printing status changes as events`
var DiffLong = `
Diff local configuration against the applied cluster state.

 Output is always YAML.

Env Vars:

  KUBECTL_EXTERNAL_DIFF:
    Environment variable can be used to select your own diff command.
    By default, the "diff" command available in your path will be run with
    "-u" (unified diff) and "-N" (treat absent files as empty) options.
`
var DiffExamples = `
  # Diff resources included in pod.json.
  kpt svr diff -R -f DIR/

  # Diff file read from stdin
  cat service.yaml | kpt svr diff -f -`

var EventsShort = `Block until the Resources are current, printing status changes as events`
var EventsLong = `
Poll the cluster for the state of all the provided resources until either they have all become 
Current or the timeout is reached. The output will be status change events.

The list of resources which should be polled are provided as manifests either on the filesystem or
on StdIn. 

  DIR:
    Path to local directory. If not provided, input is expected on StdIn.
`
var EventsExamples = `
    # Read resources from the filesystem and wait up to 1 minute for all of them to become Current
    kpt svr status events my-dir/

    # Fetch all resources in the cluster and wait up to 5 minutes for all of them to become Current
    kubectl get all --all-namespaces -oyaml | resource status events --timeout=5m`

var FetchShort = `Display the current status of the Resources`
var FetchLong = `
Fetches the state of all provided resources from the cluster and displays the status in
a table.

The list of resources are provided as manifests either on the filesystem or on StdIn. 

  DIR:
    Path to local directory.
`
var FetchExamples = `
    # Read resources from the filesystem and wait up to 1 minute for all of them to become Current
    kpt svr status fetch my-dir/

    # Fetch all resources in the cluster and wait up to 5 minutes for all of them to become Current
    kubectl get all --all-namespaces -o yaml | resource status fetch`

var WaitShort = `Block until the Resources are current, show status as a table`
var WaitLong = `
Poll the cluster for the state of all the provided resources until either they have all become 
Current or the timeout is reached. The output will be presented as a table.

The list of resources which should be polled are provided as manifests either on the filesystem or
on StdIn. 

  DIR:
    Path to local directory. If not provided, input is expected on StdIn.
`
var WaitExamples = `
    # Read resources from the filesystem and wait up to 1 minute for all of them to become Current
    kpt svr status wait DIR/

    # Fetch all resources in the cluster and wait up to 5 minutes for all of them to become Current
    kubectl get all --all-namespaces -oyaml | resource status wait --timeout=5m`
