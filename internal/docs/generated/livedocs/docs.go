// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "mdtogo"; DO NOT EDIT.
package livedocs

var LiveShort = `Reconcile configuration files with the live state`
var LiveLong = `
| Reads From              | Writes To                |
|-------------------------|--------------------------|
| local files             | cluster                  |
| cluster                 | stdout                   |

Live contains the next-generation versions of apply related commands for
deploying local configuration packages to a cluster.
`

var ApplyShort = `Apply a package to the cluster (create, update, delete)`
var ApplyLong = `
  kpt live apply DIR [flags]

Args:
  DIR:
    Path to a package directory.  The directory must contain exactly
    one ConfigMap with the grouping object annotation.

Flags::
  --wait-for-reconcile:
    If true, after all resources have been applied, the cluster will
    be polled until either all resources have been fully reconciled
    or the timeout is reached.
  
  --wait-polling-period:
    The frequency with which the cluster will be polled to determine 
    the status of the applied resources. The default value is every 2 seconds.
  
  --wait-timeout:
    The threshold for how long to wait for all resources to reconcile before
    giving up. The default value is 1 minute.
`

var DestroyShort = `Remove all previously applied resources in a package from the cluster`
var DestroyLong = `
  kpt live destroy DIR

Args:
  DIR:
    Path to a package directory.  The directory must contain exactly
    one ConfigMap with the grouping object annotation.
`

var InitShort = `Initialize a package with a object to track previously applied resources`
var InitLong = `
  kpt live init DIRECTORY [flags]

Args:
  DIR:
    Path to a package directory.  The directory must contain exactly
    one ConfigMap with the grouping object annotation.

Flags:
  --group-name:
    String name to group applied resources. Must be composed of valid
    label value characters. If not specified, the default group name
    is generated from the package directory name.
`

var PreviewShort = `Preview prints the changes apply would make to the cluster`
var PreviewLong = `
  kpt live preview DIRECTORY [flags]

Args:
  DIRECTORY:
    One directory that contain k8s manifests. The directory
    must contain exactly one ConfigMap with the grouping object annotation.

Flags:
  --destroy:
    If true, dry-run deletion of all resources.
`
